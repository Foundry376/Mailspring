{"version":3,"sources":["../src/rtp.js"],"names":[],"mappings":"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","file":"rtp.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n    let Feedback = {\n        get: function () {\n\n            let existing = Utils.find(this.xml, NS.JINGLE_RTP_RTCP_FB_0, 'rtcp-fb');\n            let result = [];\n            existing.forEach(function (xml) {\n\n                result.push({\n                    type: Utils.getAttribute(xml, 'type'),\n                    subtype: Utils.getAttribute(xml, 'subtype')\n                });\n            });\n            existing = Utils.find(this.xml, NS.JINGLE_RTP_RTCP_FB_0, 'rtcp-fb-trr-int');\n            existing.forEach(function (xml) {\n\n                result.push({\n                    type: Utils.getAttribute(xml, 'type'),\n                    value: Utils.getAttribute(xml, 'value')\n                });\n            });\n            return result;\n        },\n        set: function (values) {\n\n            let self = this;\n            let existing = Utils.find(this.xml, NS.JINGLE_RTP_RTCP_FB_0, 'rtcp-fb');\n            existing.forEach(function (item) {\n\n                self.xml.removeChild(item);\n            });\n            existing = Utils.find(this.xml, NS.JINGLE_RTP_RTCP_FB_0, 'rtcp-fb-trr-int');\n            existing.forEach(function (item) {\n\n                self.xml.removeChild(item);\n            });\n\n            values.forEach(function (value) {\n\n                let fb;\n                if (value.type === 'trr-int') {\n                    fb = Utils.createElement(NS.JINGLE_RTP_RTCP_FB_0, 'rtcp-fb-trr-int', NS.JINGLE_RTP_1);\n                    Utils.setAttribute(fb, 'type', value.type);\n                    Utils.setAttribute(fb, 'value', value.value);\n                } else {\n                    fb = Utils.createElement(NS.JINGLE_RTP_RTCP_FB_0, 'rtcp-fb', NS.JINGLE_RTP_1);\n                    Utils.setAttribute(fb, 'type', value.type);\n                    Utils.setAttribute(fb, 'subtype', value.subtype);\n                }\n                self.xml.appendChild(fb);\n            });\n        }\n    };\n\n    let Bandwidth = JXT.define({\n        name: 'bandwidth',\n        namespace: NS.JINGLE_RTP_1,\n        element: 'bandwidth',\n        fields: {\n            type: Utils.attribute('type'),\n            bandwidth: Utils.text()\n        }\n    });\n\n    let RTP = JXT.define({\n        name: '_rtp',\n        namespace: NS.JINGLE_RTP_1,\n        element: 'description',\n        tags: ['jingle-application'],\n        fields: {\n            applicationType: {value: 'rtp', writable: true,},\n            media: Utils.attribute('media'),\n            ssrc: Utils.attribute('ssrc'),\n            mux: Utils.boolSub(NS.JINGLE_RTP_1, 'rtcp-mux'),\n            encryption: {\n                get: function () {\n\n                    let enc = Utils.find(this.xml, NS.JINGLE_RTP_1, 'encryption');\n                    if (!enc.length) {\n                        return [];\n                    }\n                    enc = enc[0];\n\n                    let self = this;\n                    let data = Utils.find(enc, NS.JINGLE_RTP_1, 'crypto');\n                    let results = [];\n\n                    data.forEach(function (xml) {\n\n                        results.push(new Crypto({}, xml, self).toJSON());\n                    });\n                    return results;\n                },\n                set: function (values) {\n\n                    let enc = Utils.find(this.xml, NS.JINGLE_RTP_1, 'encryption');\n                    if (enc.length) {\n                        this.xml.removeChild(enc);\n                    }\n\n                    if (!values.length) {\n                        return;\n                    }\n\n                    Utils.setBoolSubAttribute(this.xml, NS.JINGLE_RTP_1, 'encryption', 'required', true);\n                    enc = Utils.find(this.xml, NS.JINGLE_RTP_1, 'encryption')[0];\n\n                    let self = this;\n                    values.forEach(function (value) {\n\n                        let content = new Crypto(value, null, self);\n                        enc.appendChild(content.xml);\n                    });\n                }\n            },\n            feedback: Feedback,\n            headerExtensions: {\n                get: function () {\n\n                    let existing = Utils.find(this.xml, NS.JINGLE_RTP_HDREXT_0, 'rtp-hdrext');\n                    let result = [];\n                    existing.forEach(function (xml) {\n\n                        result.push({\n                            id: Utils.getAttribute(xml, 'id'),\n                            uri: Utils.getAttribute(xml, 'uri'),\n                            senders: Utils.getAttribute(xml, 'senders')\n                        });\n                    });\n                    return result;\n                },\n                set: function (values) {\n\n                    let self = this;\n                    let existing = Utils.find(this.xml, NS.JINGLE_RTP_HDREXT_0, 'rtp-hdrext');\n                    existing.forEach(function (item) {\n\n                        self.xml.removeChild(item);\n                    });\n\n                    values.forEach(function (value) {\n\n                        let hdr = Utils.createElement(NS.JINGLE_RTP_HDREXT_0, 'rtp-hdrext', NS.JINGLE_RTP_1);\n                        Utils.setAttribute(hdr, 'id', value.id);\n                        Utils.setAttribute(hdr, 'uri', value.uri);\n                        Utils.setAttribute(hdr, 'senders', value.senders);\n                        self.xml.appendChild(hdr);\n                    });\n                }\n            }\n        }\n    });\n\n    let PayloadType = JXT.define({\n        name: '_payloadType',\n        namespace: NS.JINGLE_RTP_1,\n        element: 'payload-type',\n        fields: {\n            channels: Utils.attribute('channels'),\n            clockrate: Utils.attribute('clockrate'),\n            id: Utils.attribute('id'),\n            maxptime: Utils.attribute('maxptime'),\n            name: Utils.attribute('name'),\n            ptime: Utils.attribute('ptime'),\n            feedback: Feedback,\n            parameters: {\n                get: function () {\n\n                    let result = [];\n                    let params = Utils.find(this.xml, NS.JINGLE_RTP_1, 'parameter');\n                    params.forEach(function (param) {\n\n                        result.push({\n                            key: Utils.getAttribute(param, 'name'),\n                            value: Utils.getAttribute(param, 'value')\n                        });\n                    });\n                    return result;\n                },\n                set: function (values) {\n\n                    let self = this;\n                    values.forEach(function (value) {\n\n                        let param = Utils.createElement(NS.JINGLE_RTP_1, 'parameter');\n                        Utils.setAttribute(param, 'name', value.key);\n                        Utils.setAttribute(param, 'value', value.value);\n                        self.xml.appendChild(param);\n                    });\n                }\n            }\n        }\n    });\n\n    let Crypto = JXT.define({\n        name: 'crypto',\n        namespace: NS.JINGLE_RTP_1,\n        element: 'crypto',\n        fields: {\n            cipherSuite: Utils.attribute('crypto-suite'),\n            keyParams: Utils.attribute('key-params'),\n            sessionParams: Utils.attribute('session-params'),\n            tag: Utils.attribute('tag')\n        }\n    });\n\n    let ContentGroup = JXT.define({\n        name: '_group',\n        namespace: NS.JINGLE_GROUPING_0,\n        element: 'group',\n        fields: {\n            semantics: Utils.attribute('semantics'),\n            contents: Utils.multiSubAttribute(NS.JINGLE_GROUPING_0, 'content', 'name')\n        }\n    });\n\n    let SourceGroup = JXT.define({\n        name: '_sourceGroup',\n        namespace: NS.JINGLE_RTP_SSMA_0,\n        element: 'ssrc-group',\n        fields: {\n            semantics: Utils.attribute('semantics'),\n            sources: Utils.multiSubAttribute(NS.JINGLE_RTP_SSMA_0, 'source', 'ssrc')\n        }\n    });\n\n    let Source = JXT.define({\n        name: '_source',\n        namespace: NS.JINGLE_RTP_SSMA_0,\n        element: 'source',\n        fields: {\n            ssrc: Utils.attribute('ssrc'),\n            parameters: {\n                get: function () {\n\n                    let result = [];\n                    let params = Utils.find(this.xml, NS.JINGLE_RTP_SSMA_0, 'parameter');\n                    params.forEach(function (param) {\n\n                        result.push({\n                            key: Utils.getAttribute(param, 'name'),\n                            value: Utils.getAttribute(param, 'value')\n                        });\n                    });\n                    return result;\n                },\n                set: function (values) {\n\n                    let self = this;\n                    values.forEach(function (value) {\n\n                        let param = Utils.createElement(NS.JINGLE_RTP_SSMA_0, 'parameter');\n                        Utils.setAttribute(param, 'name', value.key);\n                        Utils.setAttribute(param, 'value', value.value);\n                        self.xml.appendChild(param);\n                    });\n                }\n            }\n        }\n    });\n\n    let Stream = JXT.define({\n        name: '_stream',\n        namespace: 'urn:xmpp:jingle:apps:rtp:msid:0',\n        element: 'stream',\n        fields: {\n            id: Utils.attribute('id'),\n            track: Utils.attribute('track')\n        }\n    });\n\n    let Mute = JXT.define({\n        name: 'mute',\n        namespace: NS.JINGLE_RTP_INFO_1,\n        element: 'mute',\n        fields: {\n            creator: Utils.attribute('creator'),\n            name: Utils.attribute('name')\n        }\n    });\n\n    let Unmute = JXT.define({\n        name: 'unmute',\n        namespace: NS.JINGLE_RTP_INFO_1,\n        element: 'unmute',\n        fields: {\n            creator: Utils.attribute('creator'),\n            name: Utils.attribute('name')\n        }\n    });\n\n\n    JXT.extend(RTP, Bandwidth);\n    JXT.extend(RTP, PayloadType, 'payloads');\n    JXT.extend(RTP, Source, 'sources');\n    JXT.extend(RTP, SourceGroup, 'sourceGroups');\n    JXT.extend(RTP, Stream, 'streams');\n\n    JXT.withDefinition('content', NS.JINGLE_1, function (Content) {\n\n        JXT.extend(Content, RTP);\n    });\n\n    JXT.withDefinition('jingle', NS.JINGLE_1, function (Jingle) {\n\n        JXT.extend(Jingle, Mute);\n        JXT.extend(Jingle, Unmute);\n        JXT.extend(Jingle, ContentGroup, 'groups');\n        JXT.add(Jingle, 'ringing', Utils.boolSub(NS.JINGLE_RTP_INFO_1, 'ringing'));\n        JXT.add(Jingle, 'hold', Utils.boolSub(NS.JINGLE_RTP_INFO_1, 'hold'));\n        JXT.add(Jingle, 'active', Utils.boolSub(NS.JINGLE_RTP_INFO_1, 'active'));\n    });\n}\n"]}
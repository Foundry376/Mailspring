{"version":3,"sources":["../src/logging.js"],"names":[],"mappings":";;;;;;6BAAgC,gBAAgB;;qBAGjC,UAAU,GAAG,EAAE;;AAE1B,QAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;;AAEtB,QAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AACjB,YAAI,EAAE,KAAK;AACX,iBAAS,EAAE,yBAAG,QAAQ;AACtB,eAAO,EAAE,KAAK;AACd,cAAM,EAAE;AACJ,cAAE,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;AACzB,qBAAS,EAAE,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC;AAC3C,gBAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;AAC7B,iBAAK,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;AAC/B,kBAAM,EAAE,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;AACjC,mBAAO,EAAE,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;AACnC,oBAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC;AACrC,kBAAM,EAAE,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;AACjC,mBAAO,EAAE,KAAK,CAAC,OAAO,CAAC,yBAAG,QAAQ,EAAE,SAAS,CAAC;AAC9C,sBAAU,EAAE,KAAK,CAAC,OAAO,CAAC,yBAAG,QAAQ,EAAE,YAAY,CAAC;SACvD;KACJ,CAAC,CAAC;;AAEH,QAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AACjB,YAAI,EAAE,SAAS;AACf,iBAAS,EAAE,yBAAG,QAAQ;AACtB,eAAO,EAAE,KAAK;AACd,cAAM,EAAE;AACJ,gBAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;AAC7B,iBAAK,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;AAC/B,gBAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;SAChC;KACJ,CAAC,CAAC;;AAGH,OAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;;AAE7B,OAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACvB,OAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;CAC7B","file":"logging.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n    let Log = JXT.define({\n        name: 'log',\n        namespace: NS.EVENTLOG,\n        element: 'log',\n        fields: {\n            id: Utils.attribute('id'),\n            timestamp: Utils.dateAttribute('timestamp'),\n            type: Utils.attribute('type'),\n            level: Utils.attribute('level'),\n            object: Utils.attribute('object'),\n            subject: Utils.attribute('subject'),\n            facility: Utils.attribute('facility'),\n            module: Utils.attribute('module'),\n            message: Utils.textSub(NS.EVENTLOG, 'message'),\n            stackTrace: Utils.textSub(NS.EVENTLOG, 'stackTrace')\n        }\n    });\n\n    let Tag = JXT.define({\n        name: '_logtag',\n        namespace: NS.EVENTLOG,\n        element: 'tag',\n        fields: {\n            name: Utils.attribute('name'),\n            value: Utils.attribute('value'),\n            type: Utils.attribute('type')\n        }\n    });\n\n\n    JXT.extend(Log, Tag, 'tags');\n\n    JXT.extendMessage(Log);\n    JXT.extendPubsubItem(Log);\n}\n"]}
{"version":3,"sources":["../src/roster.js"],"names":[],"mappings":";;;;;;6BAAgC,gBAAgB;;qBAGjC,UAAU,GAAG,EAAE;;AAE1B,QAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;;AAEtB,QAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACpB,YAAI,EAAE,QAAQ;AACd,iBAAS,EAAE,yBAAG,MAAM;AACpB,eAAO,EAAE,OAAO;AAChB,cAAM,EAAE;AACJ,eAAG,EAAE;AACD,mBAAG,EAAE,eAAY;;AAEb,2BAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;iBAC9C;AACD,mBAAG,EAAE,aAAU,KAAK,EAAE;;AAElB,wBAAI,KAAK,GAAI,KAAK,KAAK,EAAE,AAAC,CAAC;AAC3B,yBAAK,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;iBACrD;aACJ;SACJ;KACJ,CAAC,CAAC;;AAEH,QAAI,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC;AACxB,YAAI,EAAE,aAAa;AACnB,iBAAS,EAAE,yBAAG,MAAM;AACpB,eAAO,EAAE,MAAM;AACf,cAAM,EAAE;AACJ,eAAG,EAAE,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC;AACpC,gBAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;AAC7B,wBAAY,EAAE,KAAK,CAAC,SAAS,CAAC,cAAc,EAAE,MAAM,CAAC;AACrD,iCAAqB,EAAE;AACnB,mBAAG,EAAE,eAAY;;AAEb,wBAAI,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC9C,2BAAO,GAAG,KAAK,WAAW,CAAC;iBAC9B;aACJ;AACD,uBAAW,EAAE,KAAK,CAAC,aAAa,CAAC,yBAAG,MAAM,EAAE,UAAU,CAAC;AACvD,kBAAM,EAAE,KAAK,CAAC,YAAY,CAAC,yBAAG,MAAM,EAAE,OAAO,CAAC;SACjD;KACJ,CAAC,CAAC;;AAGH,OAAG,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;;AAExC,OAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;CACxB","file":"roster.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n    let Roster = JXT.define({\n        name: 'roster',\n        namespace: NS.ROSTER,\n        element: 'query',\n        fields: {\n            ver: {\n                get: function () {\n\n                    return Utils.getAttribute(this.xml, 'ver');\n                },\n                set: function (value) {\n\n                    let force = (value === '');\n                    Utils.setAttribute(this.xml, 'ver', value, force);\n                }\n            }\n        }\n    });\n\n    let RosterItem = JXT.define({\n        name: '_rosterItem',\n        namespace: NS.ROSTER,\n        element: 'item',\n        fields: {\n            jid: Utils.jidAttribute('jid', true),\n            name: Utils.attribute('name'),\n            subscription: Utils.attribute('subscription', 'none'),\n            subscriptionRequested: {\n                get: function () {\n\n                    let ask = Utils.getAttribute(this.xml, 'ask');\n                    return ask === 'subscribe';\n                }\n            },\n            preApproved: Utils.boolAttribute(NS.ROSTER, 'approved'),\n            groups: Utils.multiTextSub(NS.ROSTER, 'group')\n        }\n    });\n\n\n    JXT.extend(Roster, RosterItem, 'items');\n\n    JXT.extendIQ(Roster);\n}\n"]}
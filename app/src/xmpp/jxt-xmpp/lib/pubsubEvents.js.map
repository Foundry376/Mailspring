{"version":3,"sources":["../src/pubsubEvents.js"],"names":[],"mappings":"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","file":"pubsubEvents.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n    let Event = JXT.define({\n        name: 'event',\n        namespace: NS.PUBSUB_EVENT,\n        element: 'event'\n    });\n\n    let EventPurge = JXT.define({\n        name: 'purged',\n        namespace: NS.PUBSUB_EVENT,\n        element: 'purge',\n        fields: {\n            node: Utils.attribute('node')\n        }\n    });\n\n    let EventDelete = JXT.define({\n        name: 'deleted',\n        namespace: NS.PUBSUB_EVENT,\n        element: 'delete',\n        fields: {\n            node: Utils.attribute('node'),\n            redirect: Utils.subAttribute(NS.PUBSUB_EVENT, 'redirect', 'uri')\n        }\n    });\n\n    let EventSubscription = JXT.define({\n        name: 'subscriptionChanged',\n        namespace: NS.PUBSUB_EVENT,\n        element: 'subscription',\n        fields: {\n            node: Utils.attribute('node'),\n            jid: Utils.jidAttribute('jid'),\n            type: Utils.attribute('subscription'),\n            subid: Utils.attribute('subid'),\n            expiry: {\n                get: function () {\n\n                    let text = Utils.getAttribute(this.xml, 'expiry');\n                    if (text === 'presence') {\n                        return text;\n                    } else if (text) {\n                        return new Date(text);\n                    }\n                },\n                set: function (value) {\n\n                    if (!value) {\n                        return;\n                    }\n\n                    if (typeof value !== 'string') {\n                        value = value.toISOString();\n                    }\n\n                    Utils.setAttribute(this.xml, 'expiry', value);\n                }\n            }\n        }\n    });\n\n    let EventConfiguration = JXT.define({\n        name: 'configurationChanged',\n        namespace: NS.PUBSUB_EVENT,\n        element: 'configuration',\n        fields: {\n            node: Utils.attribute('node')\n        }\n    });\n\n    let EventItems = JXT.define({\n        name: 'updated',\n        namespace: NS.PUBSUB_EVENT,\n        element: 'items',\n        fields: {\n            node: Utils.attribute('node'),\n            retracted: {\n                get: function () {\n\n                    let results = [];\n                    let retracted = Utils.find(this.xml, NS.PUBSUB_EVENT, 'retract');\n\n                    retracted.forEach(function (xml) {\n\n                        results.push(xml.getAttribute('id'));\n                    });\n                    return results;\n                },\n                set: function (value) {\n\n                    let self = this;\n                    value.forEach(function (id) {\n\n                        let retracted = Utils.createElement(NS.PUBSUB_EVENT, 'retract', NS.PUBSUB_EVENT);\n                        retracted.setAttribute('id', id);\n                        this.xml.appendChild(retracted);\n                    });\n                }\n            }\n        }\n    });\n\n    let EventItem = JXT.define({\n        name: '_eventItem',\n        namespace: NS.PUBSUB_EVENT,\n        element: 'item',\n        fields: {\n            id: Utils.attribute('id'),\n            node: Utils.attribute('node'),\n            publisher: Utils.jidAttribute('publisher')\n        }\n    });\n\n\n    JXT.extend(EventItems, EventItem, 'published');\n\n    JXT.extend(Event, EventItems);\n    JXT.extend(Event, EventSubscription);\n    JXT.extend(Event, EventConfiguration);\n    JXT.extend(Event, EventDelete);\n    JXT.extend(Event, EventPurge);\n\n    JXT.extendMessage(Event);\n\n    JXT.withDataForm(function (DataForm) {\n\n        JXT.extend(EventConfiguration, DataForm);\n    });\n}\n"]}
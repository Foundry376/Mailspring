{"version":3,"sources":["../src/file3.js"],"names":[],"mappings":";;;;;;6BAAgC,gBAAgB;;AAGhD,IAAM,KAAK,GAAG,yBAAG,eAAe,CAAC;;qBAGlB,UAAU,GAAG,EAAE;;AAE1B,QAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;;AAEtB,QAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;AAClB,YAAI,EAAE,OAAO;AACb,iBAAS,EAAE,KAAK;AAChB,eAAO,EAAE,MAAM;AACf,cAAM,EAAE;AACJ,gBAAI,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;AAClC,gBAAI,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;AAClC,gBAAI,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC;AACpC,gBAAI,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;SACrC;KACJ,CAAC,CAAC;;AAEH,QAAI,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;AACnB,YAAI,EAAE,OAAO;AACb,iBAAS,EAAE,KAAK;AAChB,eAAO,EAAE,OAAO;AAChB,cAAM,EAAE;AACJ,kBAAM,EAAE,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC;SAC1C;KACJ,CAAC,CAAC;;AAEH,QAAI,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;AACvB,YAAI,EAAE,WAAW;AACjB,iBAAS,EAAE,yBAAG,QAAQ;AACtB,eAAO,EAAE,WAAW;AACpB,cAAM,EAAE;AACJ,eAAG,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC;AAC3B,oBAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC;AACtC,iBAAK,EAAE,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC;AACrC,kBAAM,EAAE,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC;SAC1C;KACJ,CAAC,CAAC;;AAEH,QAAI,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC;AAC1B,YAAI,EAAE,eAAe;AACrB,iBAAS,EAAE,KAAK;AAChB,eAAO,EAAE,aAAa;AACtB,YAAI,EAAE,CAAE,oBAAoB,CAAE;AAC9B,cAAM,EAAE;AACJ,2BAAe,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE;AAC1C,iBAAK,EAAE,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC;AACxD,mBAAO,EAAE,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC;SACjE;KACJ,CAAC,CAAC;;AAEH,OAAG,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACxB,OAAG,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;;AAE5B,OAAG,CAAC,cAAc,CAAC,MAAM,EAAE,yBAAG,QAAQ,EAAE,UAAU,IAAI,EAAE;;AAEpD,WAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KACpC,CAAC,CAAC;;AAEH,OAAG,CAAC,cAAc,CAAC,SAAS,EAAE,yBAAG,QAAQ,EAAE,UAAU,OAAO,EAAE;;AAE1D,WAAG,CAAC,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;KACrC,CAAC,CAAC;CACN","file":"file3.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\n\nconst FT_NS = NS.FILE_TRANSFER_3;\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n    let File = JXT.define({\n        name: '_file',\n        namespace: FT_NS,\n        element: 'file',\n        fields: {\n            name: Utils.textSub(FT_NS, 'name'),\n            desc: Utils.textSub(FT_NS, 'desc'),\n            size: Utils.numberSub(FT_NS, 'size'),\n            date: Utils.dateSub(FT_NS, 'date')\n        }\n    });\n\n    let Range = JXT.define({\n        name: 'range',\n        namespace: FT_NS,\n        element: 'range',\n        fields: {\n            offset: Utils.numberAttribute('offset')\n        }\n    });\n\n    let Thumbnail = JXT.define({\n        name: 'thumbnail',\n        namespace: NS.THUMBS_0,\n        element: 'thumbnail',\n        fields: {\n            cid: Utils.attribute('cid'),\n            mimeType: Utils.attribute('mime-type'),\n            width: Utils.numberAttribute('width'),\n            height: Utils.numberAttribute('height')\n        }\n    });\n\n    let FileTransfer = JXT.define({\n        name: '_filetransfer',\n        namespace: FT_NS,\n        element: 'description',\n        tags: [ 'jingle-application' ],\n        fields: {\n            applicationType: { value: 'filetransfer' },\n            offer: Utils.subExtension('offer', FT_NS, 'offer', File),\n            request: Utils.subExtension('request', FT_NS, 'request', File)\n        }\n    });\n\n    JXT.extend(File, Range);\n    JXT.extend(File, Thumbnail);\n\n    JXT.withDefinition('hash', NS.HASHES_1, function (Hash) {\n\n        JXT.extend(File, Hash, 'hashes');\n    });\n\n    JXT.withDefinition('content', NS.JINGLE_1, function (Content) {\n\n        JXT.extend(Content, FileTransfer);\n    });\n}\n"]}
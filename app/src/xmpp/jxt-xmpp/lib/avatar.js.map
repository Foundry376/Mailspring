{"version":3,"sources":["../src/avatar.js"],"names":[],"mappings":";;;;;;;;6BAAgC,gBAAgB;;6BAC/B,gBAAgB;;;;qBAGlB,UAAU,GAAG,EAAE;;AAE1B,QAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;;AAEtB,QAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACpB,YAAI,EAAE,QAAQ;AACd,iBAAS,EAAE,yBAAG,eAAe;AAC7B,eAAO,EAAE,MAAM;AACf,cAAM,EAAE;AACJ,cAAE,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;AACzB,iBAAK,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;AAC/B,kBAAM,EAAE,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;AACjC,iBAAK,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;AAC/B,gBAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC;AAC1C,eAAG,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC;SAC9B;KACJ,CAAC,CAAC;;AAEH,QAAI,OAAO,GAAG;AACV,WAAG,EAAE,eAAY;;AAEb,gBAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,yBAAG,eAAe,EAAE,UAAU,CAAC,CAAC;AACpE,gBAAI,OAAO,GAAG,EAAE,CAAC;AACjB,gBAAI,QAAQ,CAAC,MAAM,EAAE;AACjB,oBAAI,QAAO,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,yBAAG,eAAe,EAAE,MAAM,CAAC,CAAC;AAClE,gDAAK,QAAO,EAAE,UAAU,IAAI,EAAE;;AAE1B,2BAAO,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;iBACtC,CAAC,CAAC;aACN;AACD,mBAAO,OAAO,CAAC;SAClB;AACD,WAAG,EAAE,aAAU,KAAK,EAAE;;AAElB,gBAAI,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,yBAAG,eAAe,EAAE,UAAU,CAAC,CAAC;AAC5E,iBAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,yBAAG,eAAe,CAAC,CAAC;AAC1D,4CAAK,KAAK,EAAE,UAAU,IAAI,EAAE;;AAExB,oBAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;AAC9B,wBAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACpC,CAAC,CAAC;SACN;KACJ,CAAC;;AAGF,OAAG,CAAC,cAAc,CAAC,UAAU,IAAI,EAAE;;AAE/B,WAAG,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AAClC,WAAG,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,yBAAG,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC;KACtE,CAAC,CAAC;CACN","file":"avatar.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\nimport each from 'lodash.foreach';\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n    let Avatar = JXT.define({\n        name: 'avatar',\n        namespace: NS.AVATAR_METADATA,\n        element: 'info',\n        fields: {\n            id: Utils.attribute('id'),\n            bytes: Utils.attribute('bytes'),\n            height: Utils.attribute('height'),\n            width: Utils.attribute('width'),\n            type: Utils.attribute('type', 'image/png'),\n            url: Utils.attribute('url')\n        }\n    });\n\n    let avatars = {\n        get: function () {\n\n            let metadata = Utils.find(this.xml, NS.AVATAR_METADATA, 'metadata');\n            let results = [];\n            if (metadata.length) {\n                let avatars = Utils.find(metadata[0], NS.AVATAR_METADATA, 'info');\n                each(avatars, function (info) {\n\n                    results.push(new Avatar({}, info));\n                });\n            }\n            return results;\n        },\n        set: function (value) {\n\n            let metadata = Utils.findOrCreate(this.xml, NS.AVATAR_METADATA, 'metadata');\n            Utils.setAttribute(metadata, 'xmlns', NS.AVATAR_METADATA);\n            each(value, function (info) {\n\n                let avatar = new Avatar(info);\n                metadata.appendChild(avatar.xml);\n            });\n        }\n    };\n\n\n    JXT.withPubsubItem(function (Item) {\n\n        JXT.add(Item, 'avatars', avatars);\n        JXT.add(Item, 'avatarData', Utils.textSub(NS.AVATAR_DATA, 'data'));\n    });\n}\n"]}
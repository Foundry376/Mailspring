{"version":3,"sources":["../src/command.js"],"names":[],"mappings":"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","file":"command.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\n\nconst ACTIONS = [\n    'next',\n    'prev',\n    'complete',\n    'cancel'\n];\n\nconst CONDITIONS = [\n    'bad-action',\n    'bad-locale',\n    'bad-payload',\n    'bad-sessionid',\n    'malformed-action',\n    'session-expired'\n];\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n    let Command = JXT.define({\n        name: 'command',\n        namespace: NS.ADHOC_COMMANDS,\n        element: 'command',\n        fields: {\n            action: Utils.attribute('action'),\n            node: Utils.attribute('node'),\n            sessionid: Utils.attribute('sessionid'),\n            status: Utils.attribute('status'),\n            execute: Utils.subAttribute(NS.ADHOC_COMMANDS, 'actions', 'execute'),\n            actions: {\n                get: function () {\n\n                    let result = [];\n                    let actionSet = Utils.find(this.xml, NS.ADHOC_COMMANDS, 'actions');\n                    if (!actionSet.length) {\n                        return [];\n                    }\n                    ACTIONS.forEach(function (action) {\n\n                        let existing = Utils.find(actionSet[0], NS.ADHOC_COMMANDS, action);\n                        if (existing.length) {\n                            result.push(action);\n                        }\n                    });\n                    return result;\n                },\n                set: function (values) {\n\n                    let actionSet = Utils.findOrCreate(this.xml, NS.ADHOC_COMMANDS, 'actions');\n                    for (let i = 0, len = actionSet.childNodes.length; i < len; i++) {\n                        actionSet.removeChild(actionSet.childNodes[i]);\n                    }\n                    values.forEach(function (value) {\n\n                        actionSet.appendChild(Utils.createElement(NS.ADHOC_COMMANDS, value.toLowerCase(), NS.ADHOC_COMMANDS));\n                    });\n                }\n            }\n        }\n    });\n\n    let Note = JXT.define({\n        name: '_commandNote',\n        namespace: NS.ADHOC_COMMANDS,\n        element: 'note',\n        fields: {\n            type: Utils.attribute('type'),\n            value: Utils.text()\n        }\n    });\n\n\n    JXT.extend(Command, Note, 'notes');\n\n    JXT.extendIQ(Command);\n\n    JXT.withStanzaError(function (StanzaError) {\n\n        JXT.add(StanzaError, 'adhocCommandCondition', Utils.enumSub(NS.ADHOC_COMMANDS, CONDITIONS));\n    });\n\n    JXT.withDataForm(function (DataForm) {\n\n        JXT.extend(Command, DataForm);\n    });\n}\n"]}
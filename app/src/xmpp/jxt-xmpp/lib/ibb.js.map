{"version":3,"sources":["../src/ibb.js"],"names":[],"mappings":"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","file":"ibb.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\nconst NS_IBB = 'http://jabber.org/protocol/ibb';\nconst NS_JIBB = 'urn:xmpp:jingle:transports:ibb:1';\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n    let IBB = {\n        get: function () {\n\n            let data = Utils.find(this.xml, NS_IBB, 'data');\n            if (data.length) {\n                data = data[0];\n                return {\n                    action: 'data',\n                    sid: Utils.getAttribute(data, 'sid'),\n                    seq: parseInt(Utils.getAttribute(data, 'seq') || '0', 10),\n                    data: Buffer.from(Utils.getText(data), 'base64')\n                };\n            }\n\n            let open = Utils.find(this.xml, NS_IBB, 'open');\n            if (open.length) {\n                open = open[0];\n                let ack = Utils.getAttribute(open, 'stanza');\n                if (ack === 'message') {\n                    ack = false;\n                } else {\n                    ack = true;\n                }\n\n                return {\n                    action: 'open',\n                    sid: Utils.getAttribute(open, 'sid'),\n                    blockSize: Utils.getAttribute(open, 'block-size'),\n                    ack: ack\n                };\n            }\n\n            let close = Utils.find(this.xml, NS_IBB, 'close');\n            if (close.length) {\n                return {\n                    action: 'close',\n                    sid: Utils.getAttribute(close[0], 'sid')\n                };\n            }\n        },\n        set: function (value) {\n\n            if (value.action === 'data') {\n                let data = Utils.createElement(NS_IBB, 'data');\n                Utils.setAttribute(data, 'sid', value.sid);\n                Utils.setAttribute(data, 'seq', value.seq.toString());\n                Utils.setText(data, value.data.toString('base64'));\n                this.xml.appendChild(data);\n            }\n\n            if (value.action === 'open') {\n                let open = Utils.createElement(NS_IBB, 'open');\n                Utils.setAttribute(open, 'sid', value.sid);\n                Utils.setAttribute(open, 'block-size', (value.blockSize || '4096').toString());\n                if (value.ack === false) {\n                    Utils.setAttribute(open, 'stanza', 'message');\n                } else {\n                    Utils.setAttribute(open, 'stanza', 'iq');\n                }\n                this.xml.appendChild(open);\n            }\n\n            if (value.action === 'close') {\n                let close = Utils.createElement(NS_IBB, 'close');\n                Utils.setAttribute(close, 'sid', value.sid);\n                this.xml.appendChild(close);\n            }\n        }\n    };\n\n    let JingleIBB = JXT.define({\n        name: '_' + NS_JIBB,\n        namespace: NS_JIBB,\n        element: 'transport',\n        tags: ['jingle-transport'],\n        fields: {\n            transportType: {\n                value: NS_JIBB,\n                writable: true,\n            },\n            sid: Utils.attribute('sid'),\n            blockSize: Utils.numberAttribute('block-size'),\n            ack: {\n                get: function () {\n\n                    let value = Utils.getAttribute(this.xml, 'stanza');\n                    if (value === 'message') {\n                        return false;\n                    }\n                    return true;\n                },\n                set: function (value) {\n\n                    if (value.ack === false) {\n                        Utils.setAttribute(this.xml, 'stanza', 'message');\n                    } else {\n                        Utils.setAttribute(this.xml, 'stanza', 'iq');\n                    }\n                }\n            }\n        }\n    });\n\n    JXT.withDefinition('content', NS.JINGLE_1, function (Content) {\n\n        JXT.extend(Content, JingleIBB);\n    });\n\n    JXT.withIQ(function (IQ) {\n\n        JXT.add(IQ, 'ibb', IBB);\n    });\n\n    JXT.withMessage(function (Message) {\n\n        JXT.add(Message, 'ibb', IBB);\n    });\n}\n\n"]}
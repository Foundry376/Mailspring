{"version":3,"sources":["../src/dataforms.js"],"names":[],"mappings":"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","file":"dataforms.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\nimport { JID } from 'xmpp-jid';\n\n\nlet SINGLE_FIELDS = [\n    'text-single',\n    'text-private',\n    'list-single',\n    'jid-single'\n];\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n\n    let Field = JXT.define({\n        name: '_field',\n        namespace: NS.DATAFORM,\n        element: 'field',\n        init: function (data) {\n\n            this._type = (data || {}).type || this.type;\n        },\n        fields: {\n            type: {\n                get: function () {\n\n                    return Utils.getAttribute(this.xml, 'type', 'text-single');\n                },\n                set: function (value) {\n\n                    this._type = value;\n                    Utils.setAttribute(this.xml, 'type', value);\n                }\n            },\n            name: Utils.attribute('var'),\n            desc: Utils.textSub(NS.DATAFORM, 'desc'),\n            required: Utils.boolSub(NS.DATAFORM, 'required'),\n            label: Utils.attribute('label'),\n            value: {\n                get: function () {\n\n                    let vals = Utils.getMultiSubText(this.xml, NS.DATAFORM, 'value');\n                    if (this._type === 'boolean') {\n                        return vals[0] === '1' || vals[0] === 'true';\n                    }\n                    if (vals.length > 1) {\n                        if (this._type === 'text-multi') {\n                            return vals.join('\\n');\n                        }\n\n                        if (this._type === 'jid-multi') {\n                            return vals.map(function (jid) {\n\n                                return new JID(jid);\n                            });\n                        }\n\n                        return vals;\n                    }\n                    if (SINGLE_FIELDS.indexOf(this._type) >= 0) {\n                        if (this._type === 'jid-single') {\n                            return new JID(vals[0]);\n                        }\n                        return vals[0];\n                    }\n\n                    return vals;\n                },\n                set: function (value) {\n\n                    if (this._type === 'boolean' || value === true || value === false) {\n                        let truthy = value === true || value === 'true' || value === '1';\n                        let sub = Utils.createElement(NS.DATAFORM, 'value', NS.DATAFORM);\n                        sub.textContent = truthy ? '1' : '0';\n                        this.xml.appendChild(sub);\n                    } else {\n                        if (this._type === 'text-multi' && typeof value === 'string') {\n                            value = value.split('\\n');\n                        }\n                        Utils.setMultiSubText(this.xml, NS.DATAFORM, 'value', value, function (val) {\n\n                            let sub = Utils.createElement(NS.DATAFORM, 'value', NS.DATAFORM);\n                            sub.textContent = val;\n                            this.xml.appendChild(sub);\n                        }.bind(this));\n                    }\n                }\n            }\n        }\n    });\n\n    let Option = JXT.define({\n        name: '_formoption',\n        namespace: NS.DATAFORM,\n        element: 'option',\n        fields: {\n            label: Utils.attribute('label'),\n            value: Utils.textSub(NS.DATAFORM, 'value')\n        }\n    });\n\n    let Item = JXT.define({\n        name: '_formitem',\n        namespace: NS.DATAFORM,\n        element: 'item'\n    });\n\n    let Media = JXT.define({\n        name: 'media',\n        element: 'media',\n        namespace: NS.DATAFORM_MEDIA,\n        fields: {\n            height: Utils.numberAttribute('height'),\n            width: Utils.numberAttribute('width')\n        }\n    });\n\n    let MediaURI = JXT.define({\n        name: '_mediaURI',\n        element: 'uri',\n        namespace: NS.DATAFORM_MEDIA,\n        fields: {\n            uri: Utils.text(),\n            type: Utils.attribute('type')\n        }\n    });\n\n    let Validation = JXT.define({\n        name: 'validation',\n        element: 'validate',\n        namespace: NS.DATAFORM_VALIDATION,\n        fields: {\n            dataType: Utils.attribute('datatype'),\n            basic: Utils.boolSub(NS.DATAFORM_VALIDATION, 'basic'),\n            open: Utils.boolSub(NS.DATAFORM_VALIDATION, 'open'),\n            regex: Utils.textSub(NS.DATAFORM_VALIDATION, 'regex')\n        }\n    });\n\n    let Range = JXT.define({\n        name: 'range',\n        element: 'range',\n        namespace: NS.DATAFORM_VALIDATION,\n        fields: {\n            min: Utils.attribute('min'),\n            max: Utils.attribute('max')\n        }\n    });\n\n    let ListRange = JXT.define({\n        name: 'select',\n        element: 'list-range',\n        namespace: NS.DATAFORM_VALIDATION,\n        fields: {\n            min: Utils.numberAttribute('min'),\n            max: Utils.numberAttribute('max')\n        }\n    });\n\n    let layoutContents = {\n        get: function () {\n\n            let result = [];\n            for (let i = 0, len = this.xml.childNodes.length; i < len; i++) {\n                let child = this.xml.childNodes[i];\n                if (child.namespaceURI !== NS.DATAFORM_LAYOUT) {\n                    continue;\n                }\n\n                switch (child.localName) {\n                    case 'text':\n                        result.push({\n                            text: child.textContent\n                        });\n                        break;\n                    case 'fieldref':\n                        result.push({\n                            field: child.getAttribute('var')\n                        });\n                        break;\n                    case 'reportedref':\n                        result.push({\n                            reported: true\n                        });\n                        break;\n                    case 'section':\n                        result.push({\n                            section: new Section(null, child, this).toJSON()\n                        });\n                        break;\n                }\n            }\n\n            return result;\n        },\n        set: function (values) {\n\n            for (let i = 0, len = values.length; i < len; i++) {\n                let value = values[i];\n                if (value.text) {\n                    let text = Utils.createElement(NS.DATAFORM_LAYOUT, 'text', NS.DATAFORM_LAYOUT);\n                    text.textContent = value.text;\n                    this.xml.appendChild(text);\n                }\n                if (value.field) {\n                    let field = Utils.createElement(NS.DATAFORM_LAYOUT, 'fieldref', NS.DATAFORM_LAYOUT);\n                    field.setAttribute('var', value.field);\n                    this.xml.appendChild(field);\n                }\n                if (value.reported) {\n                    this.xml.appendChild(Utils.createElement(NS.DATAFORM_LAYOUT, 'reportedref', NS.DATAFORM_LAYOUT));\n                }\n                if (value.section) {\n                    let sectionXML = Utils.createElement(NS.DATAFORM_LAYOUT, 'section', NS.DATAFORM_LAYOUT);\n                    this.xml.appendChild(sectionXML);\n\n                    let section = new Section(null, sectionXML);\n                    section.label = value.section.label;\n                    section.contents = value.section.contents;\n                }\n            }\n        }\n    };\n\n    let Section = JXT.define({\n        name: '_section',\n        element: 'section',\n        namespace: NS.DATAFORM_LAYOUT,\n        fields: {\n            label: Utils.attribute('label'),\n            contents: layoutContents\n        }\n    });\n\n    let Page = JXT.define({\n        name: '_page',\n        element: 'page',\n        namespace: NS.DATAFORM_LAYOUT,\n        fields: {\n            label: Utils.attribute('label'),\n            contents: layoutContents\n        }\n    });\n\n    let DataForm = JXT.define({\n        name: 'form',\n        namespace: NS.DATAFORM,\n        element: 'x',\n        init: function () {\n\n            // Propagate reported field types to items\n\n            if (!this.reportedFields.length) {\n                return;\n            }\n\n            let fieldTypes = {};\n            this.reportedFields.forEach(function (reported) {\n\n                fieldTypes[reported.name] = reported.type;\n            });\n            this.items.forEach(function (item) {\n\n                item.fields.forEach(function (field) {\n\n                    field.type = field._type = fieldTypes[field.name];\n                });\n            });\n        },\n        fields: {\n            title: Utils.textSub(NS.DATAFORM, 'title'),\n            instructions: Utils.multiTextSub(NS.DATAFORM, 'instructions'),\n            type: Utils.attribute('type', 'form'),\n            reportedFields: Utils.subMultiExtension(NS.DATAFORM, 'reported', Field)\n        }\n    });\n\n\n    JXT.extend(DataForm, Field, 'fields');\n    JXT.extend(DataForm, Item, 'items');\n    JXT.extend(DataForm, Page, 'layout');\n\n    JXT.extend(Field, Media);\n    JXT.extend(Field, Validation);\n    JXT.extend(Field, Option, 'options');\n\n    JXT.extend(Item, Field, 'fields');\n\n    JXT.extend(Media, MediaURI, 'uris');\n    JXT.extend(Validation, Range);\n    JXT.extend(Validation, ListRange);\n\n    JXT.extendMessage(DataForm);\n}\n"]}
{"version":3,"sources":["../src/error.js"],"names":[],"mappings":"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","file":"error.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\n\nconst CONDITIONS = [\n    'bad-request',\n    'conflict',\n    'feature-not-implemented',\n    'forbidden',\n    'gone',\n    'internal-server-error',\n    'item-not-found',\n    'jid-malformed',\n    'not-acceptable',\n    'not-allowed',\n    'not-authorized',\n    'payment-required',\n    'recipient-unavailable',\n    'redirect',\n    'registration-required',\n    'remote-server-not-found',\n    'remote-server-timeout',\n    'resource-constraint',\n    'service-unavailable',\n    'subscription-required',\n    'undefined-condition',\n    'unexpected-request'\n];\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n    let StanzaError = JXT.define({\n        name: 'error',\n        namespace: NS.CLIENT,\n        element: 'error',\n        fields: {\n            lang: {\n                get: function () {\n\n                    return (this.parent || {}).lang || '';\n                }\n            },\n            condition: Utils.enumSub(NS.STANZA_ERROR, CONDITIONS),\n            gone: {\n                get: function () {\n\n                    return Utils.getSubText(this.xml, NS.STANZA_ERROR, 'gone');\n                },\n                set: function (value) {\n\n                    this.condition = 'gone';\n                    Utils.setSubText(this.xml, NS.STANZA_ERROR, 'gone', value);\n                }\n            },\n            redirect: {\n                get: function () {\n\n                    return Utils.getSubText(this.xml, NS.STANZA_ERROR, 'redirect');\n                },\n                set: function (value) {\n\n                    this.condition = 'redirect';\n                    Utils.setSubText(this.xml, NS.STANZA_ERROR, 'redirect', value);\n                }\n            },\n            code: Utils.attribute('code'),\n            type: Utils.attribute('type'),\n            by: Utils.jidAttribute('by'),\n            $text: {\n                get: function () {\n\n                    return Utils.getSubLangText(this.xml, NS.STANZA_ERROR, 'text', this.lang);\n                }\n            },\n            text: {\n                get: function () {\n\n                    let text = this.$text;\n                    return text[this.lang] || '';\n                },\n                set: function (value) {\n\n                    Utils.setSubLangText(this.xml, NS.STANZA_ERROR, 'text', value, this.lang);\n                }\n            }\n        }\n    });\n\n\n    JXT.extendMessage(StanzaError);\n    JXT.extendPresence(StanzaError);\n    JXT.extendIQ(StanzaError);\n}\n"]}
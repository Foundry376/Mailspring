{"version":3,"sources":["../src/shim.js"],"names":[],"mappings":";;;;;;6BAAgC,gBAAgB;;qBAGjC,UAAU,GAAG,EAAE;;AAE1B,QAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;;AAEtB,QAAI,IAAI,GAAG;AACP,WAAG,EAAE,eAAY;;AAEb,gBAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,yBAAG,IAAI,EAAE,SAAS,CAAC,CAAC;AACzD,gBAAI,SAAS,CAAC,MAAM,EAAE;AAClB,uBAAO,KAAK,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yBAAG,IAAI,EAAE,QAAQ,EAAE,UAAU,MAAM,EAAE;;AAE5E,wBAAI,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9C,wBAAI,IAAI,EAAE;AACN,+BAAO;AACH,gCAAI,EAAE,IAAI;AACV,iCAAK,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;yBAC/B,CAAC;qBACL;iBACJ,CAAC,CAAC;aACN;AACD,mBAAO,EAAE,CAAC;SACb;AACD,WAAG,EAAE,aAAU,MAAM,EAAE;;AAEnB,gBAAI,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,yBAAG,IAAI,EAAE,SAAS,CAAC,CAAC;AACjE,eAAG,CAAC,eAAe,CAAC,SAAS,EAAE,yBAAG,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,GAAG,EAAE;;AAErE,oBAAI,MAAM,GAAG,KAAK,CAAC,aAAa,CAAC,yBAAG,IAAI,EAAE,QAAQ,EAAE,yBAAG,IAAI,CAAC,CAAC;AAC7D,qBAAK,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC7C,qBAAK,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;AACjC,yBAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aACjC,CAAC,CAAC;SACN;KACJ,CAAC;;AAGF,OAAG,CAAC,WAAW,CAAC,UAAU,OAAO,EAAE;;AAE/B,WAAG,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;KACrC,CAAC,CAAC;;AAEH,OAAG,CAAC,YAAY,CAAC,UAAU,QAAQ,EAAE;;AAEjC,WAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;KACtC,CAAC,CAAC;CACN","file":"shim.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n    let SHIM = {\n        get: function () {\n\n            let headerSet = Utils.find(this.xml, NS.SHIM, 'headers');\n            if (headerSet.length) {\n                return Utils.getMultiSubText(headerSet[0], NS.SHIM, 'header', function (header) {\n\n                    let name = Utils.getAttribute(header, 'name');\n                    if (name) {\n                        return {\n                            name: name,\n                            value: Utils.getText(header)\n                        };\n                    }\n                });\n            }\n            return [];\n        },\n        set: function (values) {\n\n            let headerSet = Utils.findOrCreate(this.xml, NS.SHIM, 'headers');\n            JXT.setMultiSubText(headerSet, NS.SHIM, 'header', values, function (val) {\n\n                let header = Utils.createElement(NS.SHIM, 'header', NS.SHIM);\n                Utils.setAttribute(header, 'name', val.name);\n                Utils.setText(header, val.value);\n                headerSet.appendChild(header);\n            });\n        }\n    };\n\n\n    JXT.withMessage(function (Message) {\n\n        JXT.add(Message, 'headers', SHIM);\n    });\n\n    JXT.withPresence(function (Presence) {\n\n        JXT.add(Presence, 'headers', SHIM);\n    });\n}\n"]}
{"version":3,"sources":["../src/iq.js"],"names":[],"mappings":";;;;;;;;6BAAgC,gBAAgB;;AAGhD,IAAI,SAAS,GAAG,EAAE,CAAC;;AAGnB,SAAS,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE;;AAEjD,QAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;;AAEtB,QAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AAChB,YAAI,EAAE,IAAI;AACV,iBAAS,EAAE,SAAS;AACpB,eAAO,EAAE,IAAI;AACb,gBAAQ,EAAE,IAAI;AACd,cAAM,EAAE;AACJ,gBAAI,EAAE,KAAK,CAAC,aAAa,EAAE;AAC3B,cAAE,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;AACzB,cAAE,EAAE,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC;AAClC,gBAAI,EAAE,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC;AACtC,gBAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;SAChC;KACJ,CAAC,CAAC;;AAEH,QAAM,OAAM,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC;;AAEnC,mBAAc,EAAE,CAAC,SAAS,EAAE;AACxB,cAAM,EAAC,kBAAG;;AAEN,gBAAI,MAAM,GAAG,OAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,kBAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AACtC,kBAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACpC,mBAAO,MAAM,CAAC;SACjB;;AAED,mBAAW,EAAC,qBAAC,IAAI,EAAE;;AAEf,gBAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AAClB,gBAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;AACpB,gBAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AAClB,gBAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;AACrB,mBAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;SACvB;;AAED,kBAAU,EAAC,oBAAC,IAAI,EAAE;;AAEd,gBAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AAClB,gBAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;AACpB,gBAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AAClB,gBAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AACpB,mBAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;SACvB;KACJ,CAAC,CAAC;CACN,CAAC;;qBAGa,UAAU,GAAG,EAAE;;AAE1B,aAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,yBAAG,MAAM,CAAC,CAAC;AACzC,aAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,UAAU,EAAE,yBAAG,MAAM,CAAC,CAAC;AAC/C,aAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,aAAa,EAAE,yBAAG,SAAS,CAAC,CAAC;CACxD","file":"iq.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\n\nlet internals = {};\n\n\ninternals.defineIQ = function (JXT, name, namespace) {\n\n    let Utils = JXT.utils;\n\n    let IQ = JXT.define({\n        name: name,\n        namespace: namespace,\n        element: 'iq',\n        topLevel: true,\n        fields: {\n            lang: Utils.langAttribute(),\n            id: Utils.attribute('id'),\n            to: Utils.jidAttribute('to', true),\n            from: Utils.jidAttribute('from', true),\n            type: Utils.attribute('type')\n        }\n    });\n\n    const toJSON = IQ.prototype.toJSON;\n\n    Object.assign(IQ.prototype, {\n        toJSON () {\n\n            let result = toJSON.call(this);\n            result.resultReply = this.resultReply;\n            result.errorReply = this.errorReply;\n            return result;\n        },\n\n        resultReply (data) {\n\n            data = data || {};\n            data.to = this.from;\n            data.id = this.id;\n            data.type = 'result';\n            return new IQ(data);\n        },\n\n        errorReply (data) {\n\n            data = data || {};\n            data.to = this.from;\n            data.id = this.id;\n            data.type = 'error';\n            return new IQ(data);\n        }\n    });\n};\n\n\nexport default function (JXT) {\n\n    internals.defineIQ(JXT, 'iq', NS.CLIENT);\n    internals.defineIQ(JXT, 'serverIQ', NS.SERVER);\n    internals.defineIQ(JXT, 'componentIQ', NS.COMPONENT);\n}\n"]}